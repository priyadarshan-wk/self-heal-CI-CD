name: Self-Healing CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
      # - self-heal-branch


jobs:
  self_heal:
    runs-on: ubuntu-latest

    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get update > /dev/null 2>&1
        sudo apt-get install -y build-essential python3-dev > /dev/null 2>&1
    - name: Checkout the code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.YOUR_GITHUB_TOKEN }}

    - name: Set up Git configuration
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip3 install -r requirements.txt > /dev/null 2>&1
    - name: Run python script
      id: run_script
      env:
        GITHUB_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN }}
      shell: bash
      run: |
        set +e
        flag=0
        for i in {1..5}; do
          flag=$i
          echo "flag: $flag"
          python3 src/bug.py > /home/runner/work/self-heal-CI-CD/self-heal-CI-CD/error.txt 2>&1
          if [ $? -eq 0 ]; then
            echo "Python script executed successfully."
            exit 0
          else
            if [ $i -eq 1 ]; then
              echo "::set-output name=script_run::true"
            fi
            echo "AI fix applying. Attempt $i/5."
            python3 fab-self-heal.py
          fi
        done
        if [ $flag -eq 5 ]; then
          echo "Manual intervention required"
          exit 1
        fi
        

    - name: Create or update PR
      id: self_heal
      if: ${{ steps.run_script.outputs.script_run == 'true' }}
      env:
        FAB_EXPY_API_URL: ${{ secrets.FAB_EXPY_API_URL }}
        FAB_EXPY_API_KEY: ${{ secrets.FAB_EXPY_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN }}
      run: |
        python3 create-and-update-pr.py

    - name: Get PR link
      if: github.ref == 'refs/heads/main'
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"message":"Self-healing workflow completed. PR created with the fix!\n${{ env.PR_LINK }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}
        echo "PR_LINK: "${{ env.PR_LINK }}

        