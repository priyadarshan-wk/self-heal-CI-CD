name: Self-Healing CI/CD

on:
  workflow_dispatch:


jobs:
  self_heal:
    runs-on: ubuntu-latest

    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev
    - name: Checkout the code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.YOUR_GITHUB_TOKEN }}

    - name: Set up Git configuration
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        # python -m pip install --upgrade pip
        pip3 install -r requirements.txt
        # pip install openai github
    # - name: Run python script
    #   run: |
    #     pwd
    #     ls -la
    #     python3 bug.py > /home/runner/work/self-heal-CI-CD/self-heal-CI-CD/error.txt 2>&1
        
    - name: Dynamically find and run Python files
      run: |
        # Find all Python files (e.g., *.py) in the repository, excluding this workflow file
        for python_file in $(find . -name "*.py" -not -path "./.github/*"); do
          echo "Running $python_file"
          python3 $python_file > /home/runner/work/self-heal-CI-CD/self-heal-CI-CD/error.txt 2>&1
          
          # If the script fails, exit with an error
          if [ $? -ne 0 ]; then
            echo "Error running $python_file!"
            exit 1
          fi
        done

    - name: Run self-healing script
      id: self_heal
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        pwd
        ls -la
        cat /home/runner/work/self-heal-CI-CD/self-heal-CI-CD/error.txt
        python self_heal.py

    - name: Slack notification
      if: steps.self_heal.outputs == 'success'
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Self-healing workflow completed. PR created with the fix!\n${{ env.PR_LINK }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}
